def Init():
   # --- author : rickb

   # --- Set parameter names
   STR.SetFParam0Name("Decay")
   STR.SetFParam1Name("Back Color Adjust")
   STR.SetFParam2Name("Width")
   # --- accent : Stop Movement
   # --- trigger : XOR Frames
   
   GLB.x = 10
   GLB.y = 10
   # 0 = left, 1 = bottom, 2 = right, 3 = top 
   GLB.d = 2
   GLB.a=0
   GLB.mode=0
   GLB.time = STR.FT() + STR.IT()

   def pipe(cx, cy, d):
      if d == 0:
         #left
         newx = 20+random.randint(0,cx-20)
         newy = cy
         #1 or 3
         if  newy <= 20:
            newd = 1
         elif newy >= 220:
            newd = 3
         else:
            newd = 1+(random.randint(0,1)*2)
      elif d == 2:
         #right
         newx = 10+random.randint(cx,310)
         newy = cy
         #1 or 3
         if  newy <= 20:
            newd = 1
         elif newy >= 220:
            newd = 3
         else:
            newd = 1+(random.randint(0,1)*2)
      elif d == 1:
         #bottom
         newx = cx
         newy = 10+random.randint(cy,230)
         #1 or 3
         if  newx <= 20:
            newd = 2
         elif newx >= 300:
            newd = 0
         else:
            newd = (random.randint(0,1)*2)
      else:
         #top
         newx = cx
         newy = 20+random.randint(0,cy-20)
         #1 or 3
         if  newx <= 20:
            newd = 2
         elif newx >= 300:
            newd = 0
         else:
            newd = (random.randint(0,1)*2)
      
      if d == 0 or d == 2:
         #H
         pattern = cairo.LinearGradient(cx,cy-10,cx,cy+10)
      else:
         #V
         pattern = cairo.LinearGradient(cx-10,cy,cx+10,cy)
      if GLB.mode:
         pattern.add_color_stop_rgb(0.0,1.0,1.0,0.0)
         pattern.add_color_stop_rgb(0.5,0.0,0.0,0.0)
         pattern.add_color_stop_rgb(1.0,0.0,1.0,1.0)
      else:
         pattern.add_color_stop_rgb(0.0,0.0,0.0,1.0)
         pattern.add_color_stop_rgb(0.5,1.0,0.0,0.0)
         pattern.add_color_stop_rgb(1.0,0.0,1.0,0.0)
      cr.set_source(pattern)

      cr.set_line_width(1+GLB.f2)
      cr.move_to(cx,cy)
      cr.line_to(newx,newy)
      GLB.x = newx
      GLB.y = newy
      GLB.d = newd

   GLB.pipe = pipe

def Render(cr):
   # --- grabbing copies of local variables and demonstrating our mix methods as well
   GLB.f0 = STR.F0mix(-0.04,0.04)
   GLB.f1 = STR.F1()
   GLB.f2 = STR.F2mix(0.0,19.0)

   # --- trigger can only be checked once, as it resets the internal flag (accent can be called multiple times)
   trig = STR.CheckTrigger()
   if trig:
      GLB.mode = 1 if GLB.mode == 0 else 0

   sur2 = surface.create_similar(cairo.CONTENT_COLOR_ALPHA,320,240)
   cr2 = cairo.Context(sur2)

   sp = cairo.SurfacePattern(surface)

   m = cairo.Matrix()
   m.translate(160,120)
   m.scale(.97,.97)
   m.translate(-160,-120)
   sp.set_matrix(m)

   cr2.set_source(sp)
   cr2.rectangle(0,0,320,240)
   cr2.fill()
   if STR.CheckAccent():
      cr2.set_operator(cairo.OPERATOR_XOR)
   else:
      cr2.set_operator(cairo.OPERATOR_MULTIPLY)
   cr2.set_source_rgba((1.0-GLB.f1)*9.8,9.8*sin(GLB.f1*pi),9.8*GLB.f1,1)
   cr2.rectangle(0,0,320,240)
   cr2.fill()

   sp = cairo.SurfacePattern(sur2)
   cr.set_source(sp)
   cr.rectangle(0,0,320,240)
   cr.fill()

   cr.set_operator(cairo.OPERATOR_OVER)
   cr.set_source_rgba(0,0,0,0.05+GLB.f0)
   cr.rectangle(0,0,320,240)
   cr.fill()

   new_time = STR.FT() + STR.IT()
   #Now waits for time for incrementing visuals
   if abs(new_time - GLB.time) > 0.005:
      GLB.time = new_time
   else:
      return



   cr.set_source_rgb(1.0,0.5,0.5)
   cr.set_line_cap(cairo.LINE_CAP_ROUND);
   GLB.pipe(GLB.x,GLB.y,GLB.d)
   cr.stroke()

   sur2.finish()

   # --- Management of global variables
   GLB.a=GLB.a+0.1
   if GLB.a>1.0:
      GLB.a=0
