def Init():
   # --- author : rickb
   STR.SetFParam0Name("Fade")
   STR.SetFParam1Name("Line Width")
   STR.SetFParam2Name("Offset")
   # --- accent : Red Add   
   # --- trigger : Green Add   
   
   GLB.angle = -pi/2
   GLB.angle2 = -pi/2
   GLB.dir   = 1
   GLB.xmode = 0

def Render(cr):
   # --- grabbing copies of local variables and demonstrating our mix methods as well
   f0 = STR.F0()
   GLB.f1 = STR.F1mix(1.0,8.0)
   GLB.f2 = STR.F2mix(0.0,80.0)

   t = STR.FT() + STR.IT()

   # --- trigger can only be checked once, as it resets the internal flag (accent can be called multiple times)
   trig = STR.CheckTrigger()
   if trig:
      GLB.xmode = 1 if GLB.xmode==0 else 0

   sur2 = surface.create_similar(cairo.CONTENT_COLOR_ALPHA,320,240)
   cr2 = cairo.Context(sur2)

   sp = cairo.SurfacePattern(surface)
   sp.set_filter(cairo.FILTER_NEAREST)

   m = cairo.Matrix()
   m.translate(160,120)
   m.scale(0.96,0.96)
   m.rotate(sin(t))
   m.translate(-160,-120)
   sp.set_matrix(m)

   cr2.set_source(sp)
   cr2.rectangle(0,0,320,240)
   cr2.fill()

   sp = cairo.SurfacePattern(sur2)
   sp.set_filter(cairo.FILTER_NEAREST)
   cr.set_source(sp)
   cr.rectangle(0,0,320,240)
   cr.fill()

   cr.set_source_rgba(0,0,0,f0)
   cr.rectangle(0,0,320,240)
   cr.fill()

   cr.set_line_width(GLB.f1)

   on = 0
   x = 0
   for i in range(320):
      if random.randint(0,15) < 3:
         on = 1 if on == 0 else 0
         if on:
            if STR.CheckAccent():
               cr.set_source_rgb(0,0,1)
            else:
               cr.set_source_rgb(1,1,1)
         else:
            cr.set_source_rgb(0,0,0)
         cr.move_to(x,100+GLB.f2)
         cr.line_to(i,100+GLB.f2)
         x = i
         cr.stroke()

   if GLB.xmode:
      if STR.CheckAccent():
         cr.set_operator(cairo.OPERATOR_XOR)
      x=0
      for i in range(80):
         if random.randint(0,15) < 8:
            on = 1 if on == 0 else 0
            if on:
               cr.set_source_rgb(0,1,0)
            else:
               cr.set_source_rgb(0,0,0)
            cr.move_to(x*4,100+GLB.f2)
            cr.line_to(i*4,100+GLB.f2)
            x=i
            cr.stroke()
         
